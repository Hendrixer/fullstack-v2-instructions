{"pageProps":{"post":{"attributes":{},"html":"<h2 id=\"creating-new-projects\">Creating New Projects</h2>\n<p>To create a new project, we need to make a component that shows the UI and makes an API request. Let&#39;s make the API function in <code>/lib/api.ts</code>:</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">createNewProject</span> = (<span class=\"hljs-params\">name</span>) =&gt; {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">fetcher</span>({\n    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&quot;/api/project&quot;</span>,\n    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&quot;POST&quot;</span>,\n    <span class=\"hljs-attr\">body</span>: { name },\n  });\n};\n</code></pre>\n<p>Then the API handler in <code>page/api/project.ts</code></p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> { validateJWT } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/lib/auth&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { db } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/lib/db&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">handler</span>(<span class=\"hljs-params\">req, res</span>) {\n  <span class=\"hljs-keyword\">const</span> user = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">validateJWT</span>(req.<span class=\"hljs-property\">cookies</span>[process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">COOKIE_NAME</span>]);\n\n  <span class=\"hljs-keyword\">await</span> db.<span class=\"hljs-property\">project</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">data</span>: {\n      <span class=\"hljs-attr\">name</span>: req.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">name</span>,\n      <span class=\"hljs-attr\">ownerId</span>: user.<span class=\"hljs-property\">id</span>,\n    },\n  });\n\n  res.<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">data</span>: { <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;ok&quot;</span> } });\n}\n</code></pre>\n<h2 id=\"newproject-component\">NewProject Component</h2>\n<p>And finally, a client component. You&#39;ll need to install React Modal:</p>\n<pre><code class=\"hljs language-bash\">npm i react-modal @types/react-modal\n</code></pre>\n<p>Then create a <code>NewProject.tsx</code> in the components directory:</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-string\">&quot;use client&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { createNewProject } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/lib/api&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Modal</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;react-modal&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Button</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./Button&quot;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Input</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./Input&quot;</span>;\n\n<span class=\"hljs-title class_\">Modal</span>.<span class=\"hljs-title function_\">setAppElement</span>(<span class=\"hljs-string\">&quot;#modal&quot;</span>);\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">NewProject</span> = (<span class=\"hljs-params\"></span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> [modalIsOpen, setIsOpen] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-literal\">false</span>);\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">openModal</span> = (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-title function_\">setIsOpen</span>(<span class=\"hljs-literal\">true</span>);\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">closeModal</span> = (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-title function_\">setIsOpen</span>(<span class=\"hljs-literal\">false</span>);\n  <span class=\"hljs-keyword\">const</span> [name, setName] = <span class=\"hljs-title function_\">useState</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">handleSubmit</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">e</span>) =&gt; {\n    e.<span class=\"hljs-title function_\">preventDefault</span>();\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">createNewProject</span>(name);\n    <span class=\"hljs-title function_\">closeModal</span>();\n  };\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;px-6 py-8 hover:scale-105 transition-all ease-in-out duration-200 flex justify-center items-center&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> openModal()}&gt;+ New Project<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Modal</span>\n        <span class=\"hljs-attr\">isOpen</span>=<span class=\"hljs-string\">{modalIsOpen}</span>\n        <span class=\"hljs-attr\">onRequestClose</span>=<span class=\"hljs-string\">{closeModal}</span>\n        <span class=\"hljs-attr\">overlayClassName</span>=<span class=\"hljs-string\">&quot;bg-[rgba(0,0,0,.4)] flex justify-center items-center absolute top-0 left-0 h-screen w-screen&quot;</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;w-3/4 bg-white rounded-xl p-8&quot;</span>\n      &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;text-3xl mb-6&quot;</span>&gt;</span>New Project<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">&quot;flex items-center&quot;</span> <span class=\"hljs-attr\">onSubmit</span>=<span class=\"hljs-string\">{handleSubmit}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Input</span>\n            <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">&quot;project name&quot;</span>\n            <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{name}</span>\n            <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> setName(e.target.value)}\n          /&gt;\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;submit&quot;</span>&gt;</span>Create<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Modal</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-title class_\">NewProject</span>;\n</code></pre>\n<p>Add this component to the Dashboard Home Page</p>\n<pre><code class=\"hljs language-jsx\">&lt;div className=<span class=\"hljs-string\">&quot;w-1/3 p-3&quot;</span>&gt;\n  <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">NewProject</span> /&gt;</span></span>\n&lt;/div&gt;\n</code></pre>\n<blockquote>\n<p>✔️ Code Checkpoint: The current code for the application can be found on the <a href=\"https://github.com/Hendrixer/fullstack-app-v2-app/tree/new-project\">new-project branch</a>.</p>\n</blockquote>\n","slug":"new-project","title":"New Project","section":"Project","icon":"tasks","filePath":"/home/runner/work/fullstack-v2-instructions/fullstack-v2-instructions/lessons/09-project/B-new-project.md","nextSlug":"/lessons/deployment/vercel-setup","prevSlug":"/lessons/project/page"}},"__N_SSG":true}