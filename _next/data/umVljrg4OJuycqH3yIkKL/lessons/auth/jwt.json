{"pageProps":{"post":{"attributes":{},"html":"<h2 id=\"json-web-tokens\">JSON Web Tokens</h2>\n<p>We&#39;ll be using JWT&#39;s for auth. Let&#39;s create some methods for handling them in the same <code>/lib/auth.ts</code>.</p>\n<p>Create a JWT:</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">createJWT</span> = (<span class=\"hljs-params\">user</span>) =&gt; {\n  <span class=\"hljs-comment\">// return jwt.sign({ id: user.id }, &#x27;cookies&#x27;)</span>\n  <span class=\"hljs-keyword\">const</span> iat = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">now</span>() / <span class=\"hljs-number\">1000</span>);\n  <span class=\"hljs-keyword\">const</span> exp = iat + <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">7</span>;\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SignJWT</span>({ <span class=\"hljs-attr\">payload</span>: { <span class=\"hljs-attr\">id</span>: user.<span class=\"hljs-property\">id</span>, <span class=\"hljs-attr\">email</span>: user.<span class=\"hljs-property\">email</span> } })\n    .<span class=\"hljs-title function_\">setProtectedHeader</span>({ <span class=\"hljs-attr\">alg</span>: <span class=\"hljs-string\">&quot;HS256&quot;</span>, <span class=\"hljs-attr\">typ</span>: <span class=\"hljs-string\">&quot;JWT&quot;</span> })\n    .<span class=\"hljs-title function_\">setExpirationTime</span>(exp)\n    .<span class=\"hljs-title function_\">setIssuedAt</span>(iat)\n    .<span class=\"hljs-title function_\">setNotBefore</span>(iat)\n    .<span class=\"hljs-title function_\">sign</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TextEncoder</span>().<span class=\"hljs-title function_\">encode</span>(process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">JWT_SECRET</span>));\n};\n</code></pre>\n<p>Validate a JWT:</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">validateJWT</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">jwt</span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> { payload } = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">jwtVerify</span>(\n    jwt,\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TextEncoder</span>().<span class=\"hljs-title function_\">encode</span>(process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">JWT_SECRET</span>)\n  );\n\n  <span class=\"hljs-keyword\">return</span> payload.<span class=\"hljs-property\">payload</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-built_in\">any</span>;\n};\n</code></pre>\n<p>Getting the JWT from cookies:</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getUserFromCookie</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">cookies</span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> jwt = cookies.<span class=\"hljs-title function_\">get</span>(process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">COOKIE_NAME</span>);\n\n  <span class=\"hljs-keyword\">const</span> { id } = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">validateJWT</span>(jwt.<span class=\"hljs-property\">value</span>);\n\n  <span class=\"hljs-keyword\">const</span> user = <span class=\"hljs-keyword\">await</span> db.<span class=\"hljs-property\">user</span>.<span class=\"hljs-title function_\">findUnique</span>({\n    <span class=\"hljs-attr\">where</span>: {\n      <span class=\"hljs-attr\">id</span>: id <span class=\"hljs-keyword\">as</span> <span class=\"hljs-built_in\">string</span>,\n    },\n  });\n\n  <span class=\"hljs-keyword\">return</span> user;\n};\n</code></pre>\n","slug":"jwt","title":"Jwt","section":"Auth","icon":"lock","filePath":"/home/runner/work/fullstack-v2-instructions/fullstack-v2-instructions/lessons/07-auth/D-jwt.md","nextSlug":"/lessons/auth/api-routes","prevSlug":"/lessons/auth/passwords"}},"__N_SSG":true}