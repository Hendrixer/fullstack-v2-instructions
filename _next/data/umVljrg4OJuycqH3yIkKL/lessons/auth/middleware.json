{"pageProps":{"post":{"attributes":{},"html":"<h2 id=\"middleware\">Middleware</h2>\n<p>We&#39;ll rely on middleware to protect our app from unauthenticated users. Create a <code>middleware.ts</code> file on the root</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">NextResponse</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;next/server&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { jwtVerify } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;jose&quot;</span>;\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">PUBLIC_FILE</span> = <span class=\"hljs-regexp\">/\\.(.*)$/</span>;\n\n<span class=\"hljs-comment\">// had to make this again here as the other one is in a file with bcrypt which is not supported on edge runtimes</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">verifyJWT</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\">jwt</span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> { payload } = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">jwtVerify</span>(\n    jwt,\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TextEncoder</span>().<span class=\"hljs-title function_\">encode</span>(process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">JWT_SECRET</span>)\n  );\n\n  <span class=\"hljs-keyword\">return</span> payload;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">middleware</span>(<span class=\"hljs-params\">req, res</span>) {\n  <span class=\"hljs-keyword\">const</span> { pathname } = req.<span class=\"hljs-property\">nextUrl</span>;\n  <span class=\"hljs-keyword\">if</span> (\n    pathname.<span class=\"hljs-title function_\">startsWith</span>(<span class=\"hljs-string\">&quot;/_next&quot;</span>) ||\n    pathname.<span class=\"hljs-title function_\">startsWith</span>(<span class=\"hljs-string\">&quot;/api&quot;</span>) ||\n    pathname.<span class=\"hljs-title function_\">startsWith</span>(<span class=\"hljs-string\">&quot;/static&quot;</span>) ||\n    pathname.<span class=\"hljs-title function_\">startsWith</span>(<span class=\"hljs-string\">&quot;/signin&quot;</span>) ||\n    pathname.<span class=\"hljs-title function_\">startsWith</span>(<span class=\"hljs-string\">&quot;/register&quot;</span>) ||\n    <span class=\"hljs-variable constant_\">PUBLIC_FILE</span>.<span class=\"hljs-title function_\">test</span>(pathname)\n  ) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">NextResponse</span>.<span class=\"hljs-title function_\">next</span>();\n  }\n\n  <span class=\"hljs-keyword\">const</span> jwt = req.<span class=\"hljs-property\">cookies</span>.<span class=\"hljs-title function_\">get</span>(process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">COOKIE_NAME</span>);\n\n  <span class=\"hljs-keyword\">if</span> (!jwt) {\n    req.<span class=\"hljs-property\">nextUrl</span>.<span class=\"hljs-property\">pathname</span> = <span class=\"hljs-string\">&quot;/signin&quot;</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">NextResponse</span>.<span class=\"hljs-title function_\">redirect</span>(req.<span class=\"hljs-property\">nextUrl</span>);\n  }\n\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">verifyJWT</span>(jwt.<span class=\"hljs-property\">value</span>);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">NextResponse</span>.<span class=\"hljs-title function_\">next</span>();\n  } <span class=\"hljs-keyword\">catch</span> (e) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(e);\n    req.<span class=\"hljs-property\">nextUrl</span>.<span class=\"hljs-property\">pathname</span> = <span class=\"hljs-string\">&quot;/signin&quot;</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">NextResponse</span>.<span class=\"hljs-title function_\">redirect</span>(req.<span class=\"hljs-property\">nextUrl</span>);\n  }\n}\n</code></pre>\n","slug":"middleware","title":"Middleware","section":"Auth","icon":"lock","filePath":"/home/runner/work/fullstack-v2-instructions/fullstack-v2-instructions/lessons/07-auth/F-middleware.md","nextSlug":"/lessons/dashboard-home/page","prevSlug":"/lessons/auth/api-routes"}},"__N_SSG":true}