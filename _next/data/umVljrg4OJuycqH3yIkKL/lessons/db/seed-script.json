{"pageProps":{"post":{"attributes":{},"html":"<h2 id=\"seed-script\">Seed Script</h2>\n<p>When building out our UI, we&#39;ll need data for our components to render. We can mock this data out on many different levels. Hard code in the components, create a JSON file with fake data, skip the ORM and use fake data, or we can seed the DB.</p>\n<p>I prefer the latter. This keeps us from going back and making changes to our code once we actually have real data and need to remove the mocks.</p>\n<p>All we have to do is write a seed script. A seed script is just a piece of code that inserts fake data into our dev DB so we can use it for development.</p>\n<p>Let&#39;s create a seed script. Make file in the prisma folder called <code>seed.ts</code></p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> { hashPassword } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/lib/auth&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { db } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/lib/db&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-variable constant_\">TASK_STATUS</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@prisma/client&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getRandomTaskStatus</span> = (<span class=\"hljs-params\"></span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> statuses = [\n    <span class=\"hljs-variable constant_\">TASK_STATUS</span>.<span class=\"hljs-property\">COMPLETED</span>,\n    <span class=\"hljs-variable constant_\">TASK_STATUS</span>.<span class=\"hljs-property\">NOT_STARTED</span>,\n    <span class=\"hljs-variable constant_\">TASK_STATUS</span>.<span class=\"hljs-property\">STARTED</span>,\n  ];\n  <span class=\"hljs-keyword\">return</span> statuses[<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * statuses.<span class=\"hljs-property\">length</span>)];\n};\n\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">main</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">const</span> user = <span class=\"hljs-keyword\">await</span> db.<span class=\"hljs-property\">user</span>.<span class=\"hljs-title function_\">upsert</span>({\n    <span class=\"hljs-attr\">where</span>: { <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">&quot;user@email.com&quot;</span> },\n    <span class=\"hljs-attr\">update</span>: {},\n    <span class=\"hljs-attr\">create</span>: {\n      <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">&quot;user@email.com&quot;</span>,\n      <span class=\"hljs-attr\">firstName</span>: <span class=\"hljs-string\">&quot;User&quot;</span>,\n      <span class=\"hljs-attr\">lastName</span>: <span class=\"hljs-string\">&quot;Person&quot;</span>,\n      <span class=\"hljs-attr\">password</span>: <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">hashPassword</span>(<span class=\"hljs-string\">&quot;password&quot;</span>),\n      <span class=\"hljs-attr\">projects</span>: {\n        <span class=\"hljs-attr\">create</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span>(<span class=\"hljs-number\">5</span>).<span class=\"hljs-title function_\">fill</span>(<span class=\"hljs-number\">1</span>).<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">_, i</span>) =&gt;</span> ({\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">`Project <span class=\"hljs-subst\">${i}</span>`</span>,\n          <span class=\"hljs-attr\">due</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>(<span class=\"hljs-number\">2022</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">25</span>),\n        })),\n      },\n    },\n    <span class=\"hljs-attr\">include</span>: {\n      <span class=\"hljs-attr\">projects</span>: <span class=\"hljs-literal\">true</span>,\n    },\n  });\n\n  <span class=\"hljs-keyword\">const</span> tasks = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">Promise</span>.<span class=\"hljs-title function_\">all</span>(\n    user.<span class=\"hljs-property\">projects</span>.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">project</span>) =&gt;</span>\n      db.<span class=\"hljs-property\">task</span>.<span class=\"hljs-title function_\">createMany</span>({\n        <span class=\"hljs-attr\">data</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span>(<span class=\"hljs-number\">10</span>).<span class=\"hljs-title function_\">fill</span>(<span class=\"hljs-number\">1</span>).<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">_, i</span>) =&gt;</span> {\n          <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">`Task <span class=\"hljs-subst\">${i}</span>`</span>,\n            <span class=\"hljs-attr\">ownerId</span>: user.<span class=\"hljs-property\">id</span>,\n            <span class=\"hljs-attr\">projectId</span>: project.<span class=\"hljs-property\">id</span>,\n            <span class=\"hljs-attr\">description</span>: <span class=\"hljs-string\">`Everything that describes Task <span class=\"hljs-subst\">${i}</span>`</span>,\n            <span class=\"hljs-attr\">status</span>: <span class=\"hljs-title function_\">getRandomTaskStatus</span>(),\n          };\n        }),\n      })\n    )\n  );\n\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ user, tasks });\n}\n<span class=\"hljs-title function_\">main</span>()\n  .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-keyword\">async</span> () =&gt; {\n    <span class=\"hljs-keyword\">await</span> db.$disconnect();\n  })\n  .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-keyword\">async</span> (e) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(e);\n    <span class=\"hljs-keyword\">await</span> db.$disconnect();\n    process.<span class=\"hljs-title function_\">exit</span>(<span class=\"hljs-number\">1</span>);\n  });\n</code></pre>\n<p>This will create a mock user with some projects and tasks that we can use to signup and test the application.</p>\n<blockquote>\n<p>During the recording, Scott had an issue adding the <code>paths</code> to the <code>tsconfig.json</code> file. Here are the correct paths:</p>\n</blockquote>\n<pre><code class=\"hljs language-json\"><span class=\"hljs-attr\">&quot;paths&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;@/components/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./components/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@/hooks/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./hooks/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@/lib/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./lib/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@/styles/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./styles/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@/prisma/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./prisma/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@/assets/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./assets/*&quot;</span><span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<p>Next, we have to tell prisma about this in our <code>package.json</code>. The seed script will be running using <code>ts-node</code>, so we need to create a new tsconfig for that runtime. Create <code>tsconfig-seed.json</code> and add the code below. It&#39;s exactly the same as our main one with just a change on the module type.</p>\n<pre><code class=\"hljs language-json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;compilerOptions&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;target&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;es5&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;lib&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;dom&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;dom.iterable&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;esnext&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;allowJs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;skipLibCheck&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;strict&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">false</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;forceConsistentCasingInFileNames&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;noEmit&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;incremental&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;esModuleInterop&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;module&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;CommonJS&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;moduleResolution&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;node&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;resolveJsonModule&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;isolatedModules&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;jsx&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;preserve&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;baseUrl&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;plugins&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n      <span class=\"hljs-punctuation\">{</span>\n        <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;next&quot;</span>\n      <span class=\"hljs-punctuation\">}</span>\n    <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;paths&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-attr\">&quot;@/components/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./components/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;@/hooks/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./hooks/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;@/lib/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./lib/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;@/styles/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./styles/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;@/prisma/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./prisma/*&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;@/assets/*&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;./assets/*&quot;</span><span class=\"hljs-punctuation\">]</span>\n    <span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;include&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;next-env.d.ts&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;.next/types/**/*.ts&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;**/*.ts&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;**/*.tsx&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;exclude&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;node_modules&quot;</span><span class=\"hljs-punctuation\">]</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<p>Next, let&#39;s adjust our package.json.</p>\n<pre><code class=\"hljs language-json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;prisma&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;seed&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ts-node -P tsconfig-seed.json -r tsconfig-paths/register --transpileOnly prisma/seed.ts&quot;</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n","slug":"seed-script","title":"Seed Script","section":"Db","icon":"database","filePath":"/home/runner/work/fullstack-v2-instructions/fullstack-v2-instructions/lessons/03-db/E-seed-script.md","nextSlug":"/lessons/routes-and-pages/route-groups","prevSlug":"/lessons/db/helper"}},"__N_SSG":true}